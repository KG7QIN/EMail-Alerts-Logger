
CLIENT

Initialization
1. getaddrinfo -- gets addrinfo structs by host + port
2. socket -- creates a socket descriptor for future use
3. connect -- connects the socket
-. inet_ntop -- converts address info to strings
4. freeaddrinfo -- frees up the used addrinfo structs

Communication
5. epoll_create -- creates an epoll set descriptor
6. epoll_ctl -- adds removes controls descriptors in a set
7. epoll_wait -- waits for events
8. send/recv -- send/receives data
9. close -- closes socket

SERVER

Initialization
1. getaddrinfo -- gets addrinfo structs by host + port
2. socket -- creates a socket descriptor for future use
3. bind -- binds the socket to a name (localhost)
4. freeaddrinfo -- frees up the used addrinfo structs

Communication
5. epoll_create -- creates an epoll set descriptor
6. epoll_ctl -- adds removes controls descriptors in a set
7. epoll_wait -- waits for events
8. send/recv -- send/receives data
9. close -- closes socket



Messages:

HELO hostname
MAIL FROM: address@some.com
RCPT TO: another@address.com
DATA
\r\n.\r\n
QUIT
